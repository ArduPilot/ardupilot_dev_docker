name: build and push ArduPilot container

concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: master
    tags:
      - 'v*.*.*'
  pull_request:
    branches: master

jobs:
  build-base:
    runs-on: ubuntu-20.04
    steps:
      # git checkout the PR
      - uses: actions/checkout@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ardupilot/ardupilot-dev-base
          VERSION=noop
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Only push if it comes from tagging
      - name: Build ardupilot-dev-base images
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: docker/Dockerfile_dev-base
          tags: ${{ steps.prep.outputs.tags }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
            org.label-schema.vcs-ref=${{ github.sha }}
            org.label-schema.vcs-url=${{ github.event.repository.clone_url }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: |
            type=local,dest=/tmp/.buildx-cache
 

  build-main-images:
    needs: build-base
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        config: [
            clang,
            chibios,
            armhf,
            aarch64,
            coverage
        ]
    steps:
      # git checkout the PR
      - uses: actions/checkout@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker
          driver-opts: network=host

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ardupilot/ardupilot-dev-${{matrix.config}}
          DOCKER_IMAGE_BASE=ardupilot/ardupilot-dev-base
          VERSION=noop
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          TAGS_BASE="${DOCKER_IMAGE_BASE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
            TAGS_BASE="$TAGS_BASE,${DOCKER_IMAGE_BASE}:${MINOR},${DOCKER_IMAGE_BASE}:${MAJOR},${DOCKER_IMAGE_BASE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
            TAGS_BASE="$TAGS_BASE,${DOCKER_IMAGE_BASE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=tags_base::${TAGS_BASE}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      # Only push if it comes from tagging
      - name: Build ardupilot-dev-${{matrix.config}} images
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: docker/Dockerfile_dev-${{matrix.config}}
          tags: ${{ steps.prep.outputs.tags }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
            org.label-schema.vcs-ref=${{ github.sha }}
            org.label-schema.vcs-url=${{ github.event.repository.clone_url }}

  # those need images from config, so we build them on second step
  build-sub-images:
    needs: build-main-images
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        config: [
            chibios-clang,
            armhf-musl
        ]

    steps:
      # git checkout the PR
      - uses: actions/checkout@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker
          driver-opts: network=host

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ardupilot/ardupilot-dev-${{matrix.config}}
          DOCKER_IMAGE_BASE=ardupilot/ardupilot-dev-base
          VERSION=noop
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          TAGS_BASE="${DOCKER_IMAGE_BASE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
            TAGS_BASE="$TAGS_BASE,${DOCKER_IMAGE_BASE}:${MINOR},${DOCKER_IMAGE_BASE}:${MAJOR},${DOCKER_IMAGE_BASE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
            TAGS_BASE="$TAGS_BASE,${DOCKER_IMAGE_BASE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=tags_base::${TAGS_BASE}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      # Only push if it comes from tagging
      - name: Build ardupilot-dev-${{matrix.config}} images
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: docker/Dockerfile_dev-${{matrix.config}}
          tags: ${{ steps.prep.outputs.tags }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
            org.label-schema.vcs-ref=${{ github.sha }}
            org.label-schema.vcs-url=${{ github.event.repository.clone_url }}

      # separated push action as the build-push-action@v2 don't support push for docker          
      # - name: Push ardupilot-dev-${{matrix.config}} images
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run:  |
      #     docker push ardupilot/ardupilot-dev-${{matrix.config}}

